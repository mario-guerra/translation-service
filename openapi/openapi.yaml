openapi: 3.0.0
info:
  title: Audio Translation Service
  version: 0.0.0
tags: []
paths:
  /download:
    get:
      operationId: Routes_downloadArtifact
      parameters:
        - name: ContainerName
          in: query
          required: true
          schema:
            type: string
          explode: false
        - name: uploadId
          in: query
          required: true
          schema:
            type: string
          explode: false
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                type: string
                format: byte
  /payment:
    post:
      operationId: Routes_processPayment
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.PaymentResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors.PaymentFailureError'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.Payment'
  /upload:
    post:
      operationId: Routes_uploadAudio
      parameters: []
      responses:
        '200':
          description: The request has succeeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.SuccessResponse'
        '400':
          description: The server could not understand the request due to invalid syntax.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Errors.InvalidFileError'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Models.AudioUploadMultiPart'
components:
  schemas:
    Errors.InvalidFileError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          enum:
            - The uploaded file is invalid.
    Errors.PaymentFailureError:
      type: object
      required:
        - message
      properties:
        message:
          type: string
          enum:
            - Payment processing failed.
    Models.AudioUploadMultiPart:
      type: object
      required:
        - file
        - userId
        - LangIn
        - LangOut
      properties:
        file:
          type: string
          format: binary
        userId:
          type: string
        LangIn:
          type: string
        LangOut:
          type: string
    Models.ContainerName:
      type: object
      required:
        - name
      properties:
        name:
          type: string
    Models.NotificationPreferences:
      type: object
      required:
        - userId
        - emailNotifications
      properties:
        userId:
          type: string
        emailNotifications:
          type: boolean
    Models.OperationResponse:
      type: object
      required:
        - status
      properties:
        status:
          type: string
    Models.Payment:
      type: object
      required:
        - userEmail
        - amount
        - service
        - userId
        - synthesizedAudio
      properties:
        userEmail:
          type: string
        amount:
          type: number
          format: float
        service:
          type: string
        userId:
          type: string
        synthesizedAudio:
          type: boolean
    Models.PaymentResponse:
      type: object
      required:
        - message
        - userId
      properties:
        message:
          type: string
        userId:
          type: string
    Models.SuccessResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Security.InputValidation:
      type: object
      required:
        - rules
      properties:
        rules:
          type: array
          items:
            type: string
    Security.RateLimiting:
      type: object
      required:
        - limit
        - window
      properties:
        limit:
          type: integer
          format: int32
        window:
          type: string
    Security.SecureStorage:
      type: object
      required:
        - encryption
      properties:
        encryption:
          type: string
