// <auto-generated/>

#nullable disable

using System;
using System.ClientModel.Primitives;
using System.Threading;

namespace TranslationService
{
    /// <summary></summary>
    public partial class AudioTranslationServiceClient
    {
        private readonly Uri _endpoint;
        private Routes _cachedRoutes;

        /// <summary> Initializes a new instance of AudioTranslationServiceClient for mocking. </summary>
        protected AudioTranslationServiceClient()
        {
        }

        /// <summary> Initializes a new instance of AudioTranslationServiceClient. </summary>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public AudioTranslationServiceClient(Uri endpoint) : this(endpoint, new AudioTranslationServiceClientOptions())
        {
        }

        /// <summary> Initializes a new instance of AudioTranslationServiceClient. </summary>
        /// <param name="endpoint"> Service endpoint. </param>
        /// <param name="options"> The options for configuring the client. </param>
        /// <exception cref="ArgumentNullException"> <paramref name="endpoint"/> is null. </exception>
        public AudioTranslationServiceClient(Uri endpoint, AudioTranslationServiceClientOptions options)
        {
            Argument.AssertNotNull(endpoint, nameof(endpoint));

            options ??= new AudioTranslationServiceClientOptions();

            _endpoint = endpoint;
            Pipeline = ClientPipeline.Create(options, Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>(), Array.Empty<PipelinePolicy>());
        }

        /// <summary> The HTTP pipeline for sending and receiving REST requests and responses. </summary>
        public ClientPipeline Pipeline { get; }

        /// <summary> Initializes a new instance of Routes. </summary>
        public virtual Routes GetRoutesClient()
        {
            return Volatile.Read(ref _cachedRoutes) ?? Interlocked.CompareExchange(ref _cachedRoutes, new Routes(Pipeline, _endpoint), null) ?? _cachedRoutes;
        }
    }
}
