// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.
// <auto-generated />

using System;
using System.Net;
using System.Threading.Tasks;
using System.Text.Json;
using System.Text.Json.Serialization;
using Microsoft.AspNetCore.Mvc;
using AudioTranslationService.Models.Service.Models;
using AudioTranslationService.Models.Service;

namespace AudioTranslationService.Models.Service.Controllers
{
    [ApiController]
    public abstract partial class RoutesOperationsControllerBase : ControllerBase
    {

        internal abstract IRoutesOperations RoutesOperationsImpl { get; }


        [HttpPost]
        [Route("/payment")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(PaymentResponse))]
        public virtual async Task<IActionResult> ProcessPayment(Payment body)
        {
            var result = await RoutesOperationsImpl.ProcessPaymentAsync(body);
            return Ok(result);
        }


        [HttpPost]
        [Route("/upload")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(SuccessResponse))]
        public virtual async Task<IActionResult> UploadAudio([FromHeader(Name = "Content-Type")] string contentType = "multipart/form-data", AudioUpload body)
        {
            var result = await RoutesOperationsImpl.UploadAudioAsync(contentType, body);
            return Ok(result);
        }


        [HttpGet]
        [Route("/download")]
        [ProducesResponseType((int)HttpStatusCode.OK, Type = typeof(byte[]))]
        public virtual async Task<IActionResult> DownloadArtifact([FromQuery(Name = "ContainerName")] string containerName, [FromQuery(Name = "uploadId")] string uploadId)
        {
            var result = await RoutesOperationsImpl.DownloadArtifactAsync(containerName, uploadId);
            return Ok(result);
        }

    }
}
